{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case actionTypes.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actionTypes.ADD:\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case actionTypes.SUBSTRACT:\n      return { ...state,\n        counter: state.counter - action.value\n      };\n\n    case actionTypes.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      };\n\n    case \"DELETE_RESULT\":\n      const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yuliagiarto/Documents/learning/reactjs/redux-01-start/src/store/reducer.js"],"names":["actionTypes","initialState","counter","results","reducer","state","action","type","INCREMENT","newState","Object","assign","DECREMENT","ADD","value","SUBSTRACT","STORE_RESULT","concat","id","Date","updatedArray","filter","result","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,SAAjB;AACE,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAjB;AACAI,MAAAA,QAAQ,CAACP,OAAT,GAAmBG,KAAK,CAACH,OAAN,GAAgB,CAAnC;AACA,aAAOO,QAAP;;AACF,SAAKT,WAAW,CAACY,SAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAKF,WAAW,CAACa,GAAjB;AACE,aAAO,EACL,GAAGR,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACQ;AAF3B,OAAP;;AAKF,SAAKd,WAAW,CAACe,SAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACQ;AAF3B,OAAP;;AAIF,SAAKd,WAAW,CAACgB,YAAjB;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcc,MAAd,CAAqB;AAAEC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAN;AAAkBL,UAAAA,KAAK,EAAET,KAAK,CAACH;AAA/B,SAArB;AAFJ,OAAP;;AAIF,SAAK,eAAL;AACE,YAAMkB,YAAY,GAAGf,KAAK,CAACF,OAAN,CAAckB,MAAd,CAClBC,MAAD,IAAYA,MAAM,CAACJ,EAAP,KAAcZ,MAAM,CAACiB,UADd,CAArB;AAGA,aAAO,EACL,GAAGlB,KADE;AAELF,QAAAA,OAAO,EAAEiB;AAFJ,OAAP;AA9BJ;;AAmCA,SAAOf,KAAP;AACD,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  counter: 0,\n  results: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    case actionTypes.DECREMENT:\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    case actionTypes.ADD:\n      return {\n        ...state,\n        counter: state.counter + action.value,\n      };\n\n    case actionTypes.SUBSTRACT:\n      return {\n        ...state,\n        counter: state.counter - action.value,\n      };\n    case actionTypes.STORE_RESULT:\n      return {\n        ...state,\n        results: state.results.concat({ id: new Date(), value: state.counter }),\n      };\n    case \"DELETE_RESULT\":\n      const updatedArray = state.results.filter(\n        (result) => result.id !== action.resultElId\n      );\n      return {\n        ...state,\n        results: updatedArray,\n      };\n  }\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}