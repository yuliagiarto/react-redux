{"ast":null,"code":"import * as actionTypes from \"../actions\";\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.ctrcounter\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yuliagiarto/Documents/learning/reactjs/redux-01-start/src/store/reducers/result.js"],"names":["actionTypes","initialState","results","reducer","state","action","type","STORE_RESULT","concat","id","Date","value","ctrcounter","DELETE_RESULT","updatedArray","filter","result","resultElId"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,YAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAAEC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAN;AAAkBC,UAAAA,KAAK,EAAEP,KAAK,CAACQ;AAA/B,SAArB;AAFJ,OAAP;;AAIF,SAAKZ,WAAW,CAACa,aAAjB;AACE,YAAMC,YAAY,GAAGV,KAAK,CAACF,OAAN,CAAca,MAAd,CAClBC,MAAD,IAAYA,MAAM,CAACP,EAAP,KAAcJ,MAAM,CAACY,UADd,CAArB;AAGA,aAAO,EACL,GAAGb,KADE;AAELF,QAAAA,OAAO,EAAEY;AAFJ,OAAP;AAVJ;;AAeA,SAAOV,KAAP;AACD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["\nimport * as actionTypes from \"../actions\";\n\nconst initialState = {\n  results: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return {\n        ...state,\n        results: state.results.concat({ id: new Date(), value: state.ctrcounter }),\n      };\n    case actionTypes.DELETE_RESULT:\n      const updatedArray = state.results.filter(\n        (result) => result.id !== action.resultElId\n      );\n      return {\n        ...state,\n        results: updatedArray,\n      };\n  }\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}