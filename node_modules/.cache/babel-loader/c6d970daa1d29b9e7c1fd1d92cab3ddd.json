{"ast":null,"code":"import * as actionTypes from \"../actions\";\nconst initialState = {\n  counter: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case actionTypes.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actionTypes.ADD:\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case actionTypes.SUBSTRACT:\n      return { ...state,\n        counter: state.counter - action.value\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yuliagiarto/Documents/learning/reactjs/redux-01-start/src/store/reducers/counter.js"],"names":["actionTypes","initialState","counter","reducer","state","action","type","INCREMENT","newState","Object","assign","DECREMENT","ADD","value","SUBSTRACT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,SAAjB;AACE,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAjB;AACAI,MAAAA,QAAQ,CAACN,OAAT,GAAmBE,KAAK,CAACF,OAAN,GAAgB,CAAnC;AACA,aAAOM,QAAP;;AACF,SAAKR,WAAW,CAACW,SAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAKF,WAAW,CAACY,GAAjB;AACE,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAF3B,OAAP;;AAKF,SAAKb,WAAW,CAACc,SAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAF3B,OAAP;AAjBJ;;AAsBA,SAAOT,KAAP;AACD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions\";\n\nconst initialState = {\n  counter: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    case actionTypes.DECREMENT:\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    case actionTypes.ADD:\n      return {\n        ...state,\n        counter: state.counter + action.value,\n      };\n\n    case actionTypes.SUBSTRACT:\n      return {\n        ...state,\n        counter: state.counter - action.value,\n      };\n  }\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}